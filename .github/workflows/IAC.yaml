name: IAC
permissions:
  contents: write
on:
  push:
    branches: [ "IAC" ]
  pull_request:
    branches: [ "IAC" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Plan IAC on AWS
      run: terraform init && terraform plan -var=AWS_REGION=${{ secrets.AWS_REGION }} -var=AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} -var=AWS_ACCESS_KEY_TOKEN=${{ secrets.AWS_ACCESS_KEY_TOKEN }}  -out $(git rev-parse --short HEAD).plan
    - name: Telegram update message
      run: curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_API_TOKEN }}/sendMessage"     -d "chat_id=@deqodeTest"     -d "text=Terraform plan Success for commit $(git rev-parse --short HEAD)"
    - name: Telegram update TFOUT
      run: curl  --form-string "chat_id=@deqodeTest" -F document=@$(git rev-parse --short HEAD).plan https://api.telegram.org/bot${{ secrets.TELEGRAM_API_TOKEN }}/sendDocument
    - name: aws
      run:  export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY }} && export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_TOKEN }} && export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }} && aws eks list-clusters
    # # - name: Apply Plan
    #   # run: terraform destroy -var=AWS_REGION=${{ secrets.AWS_REGION }} -var=AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} -var=AWS_ACCESS_KEY_TOKEN=${{ secrets.AWS_ACCESS_KEY_TOKEN }}  -auto-approve
    #   run: terraform apply -var=AWS_REGION=${{ secrets.AWS_REGION }} -var=AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} -var=AWS_ACCESS_KEY_TOKEN=${{ secrets.AWS_ACCESS_KEY_TOKEN }}  -auto-approve
    # - run: |
    #     ls && pwd
    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     git add .
    #     git commit -m "generated"
        # git push && echo $?
