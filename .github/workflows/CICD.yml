name: CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # - name: Get commit ID
    #   run: echo "$(git rev-parse --short HEAD)" >tag
    # - name: Build
    #   run: docker build . --tag saifeequazii/capitalbetting:$(git rev-parse --short HEAD)
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    # - name: Scan for vulnerability
    #   run: docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock --name Grype anchore/grype:latest saifeequazii/capitalbetting:$(git rev-parse --short HEAD)
    # - name: Push
    #   run: docker push saifeequazii/capitalbetting:$(git rev-parse --short HEAD)
    -  run:  |
        export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY }}
        export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_TOKEN }}
        export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
        if  aws eks list-clusters|grep "capitalbetting"
        then
        echo "yes"
        aws eks update-kubeconfig --name capitalbetting 
        kubectl get all
        helm upgrade capitalbetting kubernetes/helm/capitalbetting --install
        export LB=$(kubectl get svc capitalbetting-appd-service --no-headers=true|awk '{print $4}') && echo $LB
        curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/dns_records" -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_TOKEN }}" -H "Content-Type: application/json" --data '{"type":"CNAME","name":"404ops.in","content":"$LB","ttl":120,"proxied":false}'
        else
        echo "No Cluster Present Creating Fresh Infra"
        fi
      
